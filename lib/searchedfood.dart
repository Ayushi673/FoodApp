import 'dart:convert';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'database.dart';
import 'package:http/http.dart' as http;
import 'main.dart';

class SearchPage extends StatefulWidget {
  SearchPage(foodname);

  @override
  _SearchPageState createState() => _SearchPageState();
}

class _SearchPageState extends State<SearchPage> {

  MyRecipe myRecipe;
  var url1= "https://recipesapi.herokuapp.com/api/search?q=$foodname&page=1";
  @override
  void initState() {
    super.initState();
    fetchData();
    print('init');
    print(foodname);
  }

  void fetchData() async{
    var res= await http.get(url1);
    var decodedData=jsonDecode(res.body);
    myRecipe=MyRecipe.fromJson(decodedData);
    setState(() {

    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.brown.shade100,
      appBar: AppBar(
        backgroundColor: Colors.brown.shade800,
        title: Text('Yummm'),
      ),
      body: myRecipe==null? /*Center(
        child: CircularProgressIndicator(),
      )*/
      Wait()
          :
      GridView.count(crossAxisCount: 1,
        children: myRecipe.recipes.map((rec)=>
            Padding(
              padding: const EdgeInsets.all(4.0),
              child: InkWell(
                onTap: (){
                  var url2= "https://recipesapi.herokuapp.com/api/get?rId=${rec.recipeId}";
                  Navigator.push(context, MaterialPageRoute(builder: (context)=>CookBook1(url: url2)));
                },
                child: Card(
                  elevation: 4,
                  child: Padding(
                    padding: const EdgeInsets.all(4.0),
                    child: Column(
                      children: <Widget>[
                        Container(
                          height: 250,
                          width: 500,
                          decoration: BoxDecoration(
                              image: DecorationImage(
                                fit: BoxFit.fitWidth,
                                image: NetworkImage(rec.imageUrl),
                              )
                          ),
                        ),
                        Padding(
                          padding: const EdgeInsets.all(2.0),
                          child: Text(rec.title, textAlign: TextAlign.center,
                            style: TextStyle(
                              fontSize: 15,
                              fontWeight: FontWeight.w600,
                            ),),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
            )
        ).toList(),
      ),
    );
  }
}



class CookBook1 extends StatefulWidget {

  //final Recipe recipes;
  final String url;

  CookBook1({this.url});

  @override
  _CookBook1State createState() => _CookBook1State();
}


class _CookBook1State extends State<CookBook1> {

  Autogenerated myRecipe;
  void fetchData1() async{
    var res= await http.get(widget.url);
    var decodedData=jsonDecode(res.body);
    myRecipe=Autogenerated.fromJson(decodedData);
   setState(() {
   //   print(decodedData);
    });
  }


  BodyWidget()=>Stack(
    children: <Widget>[
      Padding(
        padding: const EdgeInsets.all(10.0),
        child: ListView(
         // crossAxisAlignment: CrossAxisAlignment.stretch,
          children:[
            Image.network(myRecipe.recipe.imageUrl,fit: BoxFit.contain,),
            Text(myRecipe.recipe.title, textAlign: TextAlign.center,
              style: TextStyle(
                fontWeight: FontWeight.w400,
                fontSize: 20,
              ),),
            SizedBox(height: 8),
            Text("Publisher: ${myRecipe.recipe.publisher}",textAlign: TextAlign.center),
            SizedBox(height: 8),
            Text("Social Rank: ${myRecipe.recipe.socialRank}",textAlign: TextAlign.center),
            SizedBox(height: 20,),
            Text("Ingredients:", textAlign: TextAlign.center,style: TextStyle(
              fontSize: 20,
              fontWeight: FontWeight.bold,
              fontStyle: FontStyle.italic,
            )),
            Column(
              //mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: myRecipe.recipe.ingredients
                  .map((t) => FilterChip(
                  backgroundColor: Colors.white,
                  label: Text(
                    t,
                    style: TextStyle(color: Colors.black),
                  ),
                  onSelected: (b) {}))
                  .toList(),
            ),
          ],
        ),
      )
    ],
  );


  @override
  Widget build(BuildContext context) {
    fetchData1();
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        elevation: 0,
        backgroundColor: Colors.brown.shade800,
        title: Text(
          'Yumm',
        )
        //    :Text(myRecipe.recipe.title),
      ),
      body:myRecipe == null?
     Wait()
          :
      BodyWidget(),
    );
  }
}


//https://recipesapi.herokuapp.com/api/get?rId=rec.recpieId

class Wait extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Opacity(
      opacity: 0.8,
      child: Container(
        decoration: BoxDecoration(
            image: DecorationImage(
              fit: BoxFit.cover,
              image: AssetImage('images/food1.jpeg'),
            )
        ),
        child: Center(child: CircularProgressIndicator(
          strokeWidth: 5,
          backgroundColor: Colors.black,
          valueColor:new AlwaysStoppedAnimation<Color>(Colors.white70),
        )),
      ),
    );
  }
}